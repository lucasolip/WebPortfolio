import{Camera}from"./camera.min.js";import{Mesh}from"./mesh.min.js";import{ScreenQuad}from"./screenquad.min.js";import{FluidGrid}from"./fluidgrid.min.js";import{loadFile}from"./file-handling.min.js";let canvas=document.querySelector("canvas"),fpsPanel=document.getElementById("fpsPanel"),showFPS=!0,simulationPaused=!1,input={position:null,prevPosition:null,isDown:!1,rightClick:!1,prevTouchDistance:null};function showError(e){var t=document.getElementById("error-panel");t.firstChild.innerHTML=e,t.classList.add("active")}function showOptions(){document.getElementById("options-panel").classList.add("active")}function hideOptions(){document.getElementById("options-panel").classList.remove("active")}let slider=document.getElementById("projection-steps-slider");async function initWebGPU(){if(window.isSecureContext||showError("WebGPU requiere de un contexto seguro (https) para funcionar"),!navigator.gpu)throw showError("WebGPU no está activado en este navegador"),new Error("WebGPU not supported on this browser.");var e,t,i=await navigator.gpu.requestAdapter();if(i)return(i=await i.requestDevice({requiredFeatures:["float32-filterable"]}))||showError("No se encontró una GPU con las capacidades requeridas"),(e=canvas.getContext("webgpu"))||showError("No se encontró un contexto WebGPU válido"),t=navigator.gpu.getPreferredCanvasFormat(),e.configure({device:i,format:t}),{device:i,context:e,canvasFormat:t};throw showError("No se encontró un GPUAdapter apropiado"),new Error("No appropriate GPUAdapter found.")}document.getElementById("options-button").addEventListener("click",showOptions),document.getElementById("close-options-button").addEventListener("click",hideOptions),document.getElementById("fps-checkbox").addEventListener("change",e=>{showFPS=e.target.checked}),document.getElementById("pause-sim-checkbox").addEventListener("change",e=>{simulationPaused=e.target.checked}),slider.addEventListener("change",e=>{fluidGrid.projectionIterations=e.target.value}),document.getElementById("resolution-select").addEventListener("change",e=>{fluidGrid.init(device,e.target.value),screenQuad.setPipeline(raymarchPipeline)});let{device,context,canvasFormat}=await initWebGPU(),scale=3,quad=new Mesh(device,[0,-2,0],[scale,scale,scale]),shaderCode=await loadFile("shader.wgsl"),surfaceShaderModule=device.createShaderModule({label:"Surface shader",code:shaderCode}),surfacePipeline=device.createRenderPipeline({label:"Pipeline",layout:device.createPipelineLayout({bindGroupLayouts:[device.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.FRAGMENT|GPUShaderStage.VERTEX,buffer:{type:"uniform"}},{binding:1,visibility:GPUShaderStage.FRAGMENT,texture:{}},{binding:2,visibility:GPUShaderStage.FRAGMENT,texture:{}},{binding:3,visibility:GPUShaderStage.FRAGMENT,sampler:{}}]})]}),vertex:{module:surfaceShaderModule,entryPoint:"vertexMain",buffers:[quad.vertexBufferLayout]},fragment:{module:surfaceShaderModule,entryPoint:"fragmentMain",targets:[{format:canvasFormat}]},depthStencil:{depthWriteEnabled:!0,depthCompare:"less",format:"depth24plus"}}),fluidGrid=(await quad.setPipeline(surfacePipeline),new FluidGrid(device)),screenQuad=(await fluidGrid.initVolumeData(device),new ScreenQuad(device,fluidGrid));function createRenderTexture(){return device.createTexture({size:[window.innerWidth,window.innerHeight],format:canvasFormat,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING})}function createDepthTexture(){return device.createTexture({size:[window.innerWidth,window.innerHeight],format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING})}let renderTexture=createRenderTexture(),depthTexture=createDepthTexture(),raymarchShaderCode=(screenQuad.setRenderTexture(renderTexture.createView()),screenQuad.setDepthTexture(depthTexture.createView()),await loadFile("raymarching.wgsl")),raymarchShaderModule=device.createShaderModule({label:"Raymarching shader",code:raymarchShaderCode}),raymarchPipeline=device.createRenderPipeline({label:"Raymarching pipeline",layout:device.createPipelineLayout({bindGroupLayouts:[device.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.FRAGMENT,buffer:{type:"uniform"}},{binding:1,visibility:GPUShaderStage.FRAGMENT,texture:{}},{binding:2,visibility:GPUShaderStage.FRAGMENT,sampler:{}},{binding:3,visibility:GPUShaderStage.FRAGMENT,texture:{sampleType:"unfilterable-float",viewDimension:"3d"}},{binding:4,visibility:GPUShaderStage.FRAGMENT,sampler:{type:"non-filtering"}},{binding:5,visibility:GPUShaderStage.FRAGMENT,texture:{sampleType:"depth"}}]})]}),vertex:{module:raymarchShaderModule,entryPoint:"vertexMain",buffers:[screenQuad.vertexBufferLayout]},fragment:{module:raymarchShaderModule,entryPoint:"fragmentMain",targets:[{format:canvasFormat}]}}),aspect=(screenQuad.setPipeline(raymarchPipeline),context.canvas.width/context.canvas.height),camera=new Camera([0,0,10],[0,0,0],aspect);function render(){var e,t,i,n,r=device.createCommandEncoder(),a=r.beginRenderPass({colorAttachments:[{view:renderTexture.createView(),loadOp:"clear",clearValue:{r:0,g:0,b:0,a:1},storeOp:"store"}],depthStencilAttachment:{view:depthTexture.createView(),depthLoadOp:"clear",depthClearValue:1,depthStoreOp:"store"}}),a=(a.setPipeline(surfacePipeline),quad.draw(a),a.end(),vec3.fromValues(-1e3,-1e3,-1e3)),o=(input.rightClick&&input.position&&([e,t]=camera.screenToNDC(input.position[0],input.position[1],canvas),e=camera.ndcToWorldRay(e,t),t=vec3.fromValues(0,0,0),n=vec3.fromValues(...camera.position),i=vec3.fromValues(...camera.target),o=vec3.create(),vec3.sub(o,i,n),vec3.normalize(o,o),i=o,n=camera.intersectRayPlane(e,i,t))&&(vec3.max(a,n,vec3.fromValues(-2,-2,-2)),vec3.min(a,a,vec3.fromValues(2,2,2)),vec3.add(a,a,vec3.fromValues(2,2,2)),vec3.scale(a,a,fluidGrid.width/4)),simulationPaused||(fluidGrid.projectionStep(device,r,a),fluidGrid.advectionStep(device,r)),r.beginRenderPass({colorAttachments:[{view:context.getCurrentTexture().createView(),loadOp:"clear",clearValue:{r:0,g:0,b:0,a:1},storeOp:"store"}]}));o.setPipeline(raymarchPipeline),screenQuad.draw(o),o.end(),device.queue.submit([r.finish()])}canvas.addEventListener("mousemove",function(e){input.position&&(input.prevPosition=input.position),input.position=vec2.fromValues(e.clientX,e.clientY)}),canvas.addEventListener("mousedown",function(e){2===e.button?input.rightClick=!0:input.isDown=!0}),canvas.addEventListener("mouseup",function(e){2===e.button?input.rightClick=!1:input.isDown=!1,input.position=null,input.prevPosition=null}),canvas.addEventListener("mouseleave",function(e){2===e.button?input.rightClick=!1:input.isDown=!1,input.position=null,input.prevPosition=null}),canvas.addEventListener("touchstart",function(e){1<e.touches.length&&e.preventDefault();var t,e=e.changedTouches;1===e.length?(input.isDown=!0,input.position=vec2.fromValues(e[0].clientX,e[0].clientY)):1<e.length&&(input.isDown=!1,input.position=null,input.prevPosition=null,t=vec2.fromValues(e[0].clientX,e[0].clientY),e=vec2.fromValues(e[1].clientX,e[1].clientY),input.prevTouchDistance=vec2.distance(t,e))}),canvas.addEventListener("touchmove",function(e){var t=e.changedTouches;1===t.length?(input.position&&(input.prevPosition=input.position),input.position=vec2.fromValues(t[0].clientX,t[0].clientY)):1<t.length&&(input.isDown=!1,input.position=null,input.prevPosition=null,e.preventDefault(),e=vec2.fromValues(t[0].clientX,t[0].clientY),t=vec2.fromValues(t[1].clientX,t[1].clientY),e=vec2.distance(e,t),input.prevTouchDistance&&camera.zoom(-10*(e-input.prevTouchDistance)),input.prevTouchDistance=e)}),canvas.addEventListener("touchend",function(e){input.isDown=!1,input.position=null,input.prevPosition=null,0===e.touches.length&&(input.prevTouchDistance=null),1<e.changedTouches.length&&e.preventDefault()}),canvas.addEventListener("touchcancel",function(){input.isDown=!1,input.position=null,input.prevPosition=null,input.prevTouchDistance=null}),canvas.addEventListener("wheel",e=>{e.preventDefault(),camera.zoom(e.deltaY)});let width=1,height=1;function updateWindowSize(){window.innerWidth===width&&window.innerHeight===height||(width=window.innerWidth,height=window.innerHeight,camera.setAspect(width/height),depthTexture&&(depthTexture.destroy(),depthTexture=createDepthTexture()),renderTexture&&(renderTexture.destroy(),renderTexture=createRenderTexture(),screenQuad.setRenderTexture(renderTexture.createView()),screenQuad.setDepthTexture(depthTexture.createView()),screenQuad.setPipeline(raymarchPipeline)),context.canvas.width=width,context.canvas.height=height)}let previousTime=0;function animate(){var e,t;showFPS?(t=(e=performance.now())-previousTime,previousTime=e,e=(1e3/t).toFixed(2),fpsPanel.innerText=e):fpsPanel.innerText="",requestAnimationFrame(animate),input.isDown&&input.position&&input.prevPosition&&(t=vec2.create(),vec2.sub(t,input.position,input.prevPosition),camera.update(t)),camera.rotate(),quad.update(camera),screenQuad.update([context.canvas.width,context.canvas.height],camera.position,camera.viewMatrix),render()}animate(),(onresize=updateWindowSize)();