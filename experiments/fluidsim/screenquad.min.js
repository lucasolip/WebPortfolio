class ScreenQuad{constructor(e,t){this.time=0,this.volumeGrid=t,this.device=e,this.bindGroup=null,this.vertices=new Float32Array([-1,-1,0,1,1,-1,1,1,1,1,1,0,-1,-1,0,1,1,1,1,0,-1,1,0,0]),this.vertexBuffer=e.createBuffer({label:"Screen vertices",size:this.vertices.byteLength,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST}),e.queue.writeBuffer(this.vertexBuffer,0,this.vertices),this.vertexBufferLayout={arrayStride:16,attributes:[{format:"float32x2",offset:0,shaderLocation:0},{format:"float32x2",offset:8,shaderLocation:1}]},this.textureView=null,this.depthTextureView=null,this.sampler=this.device.createSampler({magFilter:"linear",minFilter:"linear"}),this.sampler3D=e.createSampler({magFilter:"nearest",minFilter:"nearest",mipmapFilter:"nearest",addressModeU:"repeat",addressModeV:"repeat",addressModeW:"repeat"}),this.initializeUniforms()}initializeUniforms(){this.uniformBuffer=this.device.createBuffer({label:"Screen quad uniform buffer",size:Math.max(144,92),usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),this.uniformValues=new Float32Array(23),this.kViewMatrixOffset=0,this.kCameraPosOffset=16,this.kResolutionOffset=20,this.kTimeOffset=22,this.uniformValues.set(mat4.create(),this.kViewMatrixOffset),this.uniformValues.set([0,0,0],this.kCameraPosOffset),this.uniformValues.set([8,8],this.kResolutionOffset),this.uniformValues.set([this.time],this.kTimeOffset)}setRenderTexture(e){this.textureView=e}setDepthTexture(e){this.depthTextureView=e}setPipeline(e){this.pipeline=e,this.bindGroup=this.device.createBindGroup({label:"Screen Quad bind group",layout:this.pipeline.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:this.uniformBuffer}},{binding:1,resource:this.textureView},{binding:2,resource:this.sampler},{binding:3,resource:this.volumeGrid.densityTexture.createView()},{binding:4,resource:this.sampler3D},{binding:5,resource:this.depthTextureView}]})}update(e,t,i){this.time+=.01,this.uniformValues.set(i,this.kViewMatrixOffset),this.uniformValues.set(t,this.kCameraPosOffset),this.uniformValues.set(e,this.kResolutionOffset),this.uniformValues.set([this.time],this.kTimeOffset),this.device.queue.writeBuffer(this.uniformBuffer,0,this.uniformValues)}draw(e){e.setVertexBuffer(0,this.vertexBuffer),e.setBindGroup(0,this.bindGroup),e.draw(this.vertices.length/4)}}export{ScreenQuad};